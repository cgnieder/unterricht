% --------------------------------------------------------------------------
% the CHEMIEHELFER package v0.0
% 
%   Kleine Helferlein für das Setzen von Chemie
% 
% 2014/07/08
% --------------------------------------------------------------------------
% Clemens Niederberger
% Web:    https://github.com/cgnieder/unterricht/
% E-Mail: contact@mychemistry.eu
% --------------------------------------------------------------------------
% Copyright 2014 Clemens Niederberger
% 
% This work may be distributed and/or modified under the
% conditions of the LaTeX Project Public License, either version 1.3
% of this license or (at your option) any later version.
% The latest version of this license is in
%   http://www.latex-project.org/lppl.txt
% and version 1.3 or later is part of all distributions of LaTeX
% version 2005/12/01 or later.
% 
% This work has the LPPL maintenance status `maintained'.
% 
% The Current Maintainer of this work is Clemens Niederberger.
% --------------------------------------------------------------------------
% If you have any ideas, questions, suggestions or bugs to report, please
% feel free to contact me.
% --------------------------------------------------------------------------
\def\chmhlf@version{0.0}
\def\chmhlf@date{2014/07/08}
\def\chmhlf@info{Kleine Helferlein für das Setzen von Chemie}

\ProvidesPackage{mathehelfer}[%
  \chmhlf@date\space
  \chmhlf@version\space
  \chmhlf@info\space (CN)]

\RequirePackagesiunitx,chemfig}
\sisetup{locale=DE}
\RequirePackage[language=ngerman,ghsystem=false]{chemmacros}
\chemsetup{
  chemformula/format = \libertineLF
}

% chemfig settings:
% declare decoration 'complete sines'
% (see http://tex.stackexchange.com/a/25689/5049)
\usetikzlibrary{decorations.pathmorphing}
\pgfdeclaredecoration{complete sines}{initial}{%
  \state{initial}[
      width=+0pt,
      next state=sine,
      persistent precomputation={%
        \pgfmathsetmacro\matchinglength{%
          \pgfdecoratedinputsegmentlength /
          int(\pgfdecoratedinputsegmentlength/\pgfdecorationsegmentlength)
        }%
        \setlength{\pgfdecorationsegmentlength}{\matchinglength pt}%
      }%
    ]{}
  \state{sine}[width=\pgfdecorationsegmentlength]{%
    \pgfpathsine{%
      \pgfpoint
        {0.25\pgfdecorationsegmentlength}
        {0.5\pgfdecorationsegmentamplitude}%
    }%
    \pgfpathcosine{%
      \pgfpoint
        {0.25\pgfdecorationsegmentlength}
        {-0.5\pgfdecorationsegmentamplitude}%
    }%
    \pgfpathsine{%
      \pgfpoint
        {0.25\pgfdecorationsegmentlength}
        {-0.5\pgfdecorationsegmentamplitude}%
    }%
    \pgfpathcosine{%
      \pgfpoint
        {0.25\pgfdecorationsegmentlength}
        {0.5\pgfdecorationsegmentamplitude}%
    }%
  }%
  \state{final}{}%
}

% delocated electrons:
\pgfdeclaredecoration{delocated electrons}{initial}{%
  \state{initial}[width=2pt]{%
    \pgfpathlineto{\pgfpoint{2pt}{0pt}}%
    \pgfpathmoveto{\pgfpoint{1.5pt}{2pt}}%
    \pgfpathlineto{\pgfpoint{2pt}{2pt}}%
    \pgfpathmoveto{\pgfpoint{2pt}{0pt}}%
  }%
  \state{final}{%
    \pgfpathlineto{\pgfpointdecoratedpathlast}%
  }%
}

\tikzset{
  bold bond/.style = {line width = \chmhlf@bondboldwidth},
  dash bond/.style =
    {dash pattern = on \chmhlf@bondhashlength off \chmhlf@bondhashlength},
  hash bond/.style =
    {
      dash pattern = on \chmhlf@bondwidth off \chmhlf@bondhashlength,
      line width   = \chmhlf@bondboldwidth
    },
  wavy bond/.style =
    {
      decorate,
      decoration =
        {
          complete sines,
          amplitude   = \chmhlf@bondboldwidth,
          post length = 0 pt,
          pre length  = 0 pt,
          % Use the atom spacing: saved 
          segment length = 
            \the\dimexpr\csname CF@atom@sep\endcsname/5\relax
        }
    }
  semi double bond/.style =
    {decorate, decoration = delocated electrons},
  semi double bond right/.style =
    {
      decorate,
      decoration = {delocated electrons, mirror}
    }
}

% make chemfig atoms able to use \ce or \ch, thanks to Joseph Wright and
% Christian Tellechea
% (see http://www.texdev.net/2012/08/25/exploring-chemfig-customising-appearance/)
\renewcommand*\CF@node@content{%
  \expandafter\expandafter\expandafter
    \printatom\expandafter\expandafter\expandafter
      {\csname atom@\number\CF@cnt@atomnumber\endcsname}%
    \ensuremath{\CF@node@strut}%
}

% make the arrow label nodes center aligned. This will also allow to use \\ in
% the arrow labels and will make the use of \parbox unnecessary
\RequirePackage{regexpatch}
\xpatchcmd*\CF@arrow@display@label@i{node[}{node[align=center,}{}{}

% define the substituent submol:
\tikzset{
  subst/.style={shorten <= 10pt,preaction={draw=white,line width=4pt}}
}
\definesubmol{subst}{-[,-1,,,draw=none]-[::-30,1.5,,,subst]}
\definesubmol{Rsubst}{!{subst}R}
\definesubmol{Xsubst}{!{subst}X}

\newcommand*\chmhlf@chemformula@setup{format=\biolinumLF}
\pgfkeys{
  arb/.cd,
    chemfig-ch-setup/.code   = \def\arg@chemformula@setup{#1} ,
    chemfig-add-depth/.is if = chmhlf@chemig@add@depth ,
    chemfig-ch/.is choice ,
    chemfig-ch/true/.code    = \ChemFigExtendAtom ,
    chemfig-ch/false/.code   =
      \renewcommand*\printatom[1]{\ensuremath{\mathrm{##1}}}
}

\newbool{chmhlf@chemig@add@depth}

\newrobustcmd*\ChemFigExtendAtom{%
  \renewcommand*\printatom[1]{%
    \ifstrequal{##1}{{}}
      {}
      {%
        {%
          \ifbool{chmhlf@chemig@add@depth}
            {\vphantom{\ensuremath{##1{}_{32}}}}
            {}%
          \expandafter\ch\expandafter[\chmhlf@chemformula@setup]{##1}%
        }%
      }%
  }%
}

\newrobustcmd*\setbonds[6]{%
  \def\chmhlf@atomsep{#1}%
  \def\chmhlf@bondwidth{#2}%
  \def\chmhlf@bondboldwidth{#3}%
  \def\chmhlf@bondhashlength{#4}%
  \def\chmhlf@doublesep{#5}%
  \def\chmhlf@bondoffset{#6}%
}

\newrobustcmd*\ChemDrawLike{%
  \setbonds
    {1.78500 em}% atom sep
    {0.06642 em}% bond width
    {0.22832 em}% bold bond width
    {0.25737 em}% bond hash length
    {0.35700 em}% double sep
    {0.18265 em}% bond offset
  \setarrowoffset{1em}%
  \setcompoundsep{7em}%
  \setatomsep{\chmhlf@atomsep}%
  \setdoublesep{\chmhlf@doublesep}%
  \setbondoffset{\chmhlf@bondoffset}%
  \setbondstyle{line width = \chmhlf@bondwidth}%
  \setcrambond
    {\the\dimexpr \chmhlf@bondwidth * 2 + \chmhlf@bondboldwidth \relax}
    {\chmhlf@bondwidth}
    {\chmhlf@bondhashlength}%
  \setarrowdefault{,,line width = \chmhlf@bondwidth}%
  % TODO: option, um originale Definition zu verwenden
  \ChemFigExtendAtom
}

\ChemDrawLike

\endinput
HISTORY:
2014/07/08 v0.0 - initial draft
